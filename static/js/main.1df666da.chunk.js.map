{"version":3,"sources":["components/Box.js","components/Grid.js","components/Buttons.js","index.js"],"names":["Box","selectBox","_this","props","row","col","react_default","a","createElement","className","this","boxClass","id","onClick","React","Component","Grid","width","cols","rowsArr","i","rows","j","boxId","gridFull","push","components_Box","key","style","Buttons","handleSelect","evt","gridSize","ButtonToolbar","Button","bsStyle","startButton","stopButton","clear","slow","fast","seed","DropdownButton","title","onSelect","MenuItem","eventKey","Main","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","gridCopy","arrayClone","state","setState","Math","floor","random","clearInterval","intervalId","setInterval","play","speed","grid","Array","fill","map","generation","size","g","g2","count","components_Buttons","components_Grid","arr","JSON","parse","stringify","ReactDOM","render","src_Main","document","getElementById"],"mappings":"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","file":"static/js/main.1df666da.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../index.css\";\n\n\nclass Box extends React.Component {\n    selectBox = () => {\n        this.props.selectBox(this.props.row, this.props.col);\n    }\n\n    render() {\n        return (\n            <div\n                className={this.props.boxClass}\n                id={this.props.id}\n                onClick={this.selectBox}\n            />\n        );\n    }\n}\n\nexport default Box;","import React from 'react';\nimport '../index.css';\nimport Box from './Box.js';\n\nclass Grid extends React.Component {\n    render() {\n        const width = (this.props.cols * 14) + 1;\n        let rowsArr = [];\n\n        let boxClass = \"\";\n        for (let i = 0; i < this.props.rows; i++){\n            for (let j = 0; j < this.props.cols; j++){\n                let boxId = i + \"_\" + j;\n// ternary used to select box on (black) or off (on) when just hovering\n                boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box off\";\n                rowsArr.push(\n                    <Box\n                        boxClass={boxClass}\n                        key={boxId}\n                        boxId={boxId}\n                        row={i}\n                        col={j}\n                        selectBox={this.props.selectBox}\n                    />\n                );\n            }\n        }\n// boxes pushed into array (rowsArr)\n        return (\n            <div className =\"grid\" style={{width: width}} >\n               {rowsArr} \n            </div>\n        );\n    }    \n}\n\nexport default Grid","import React from \"react\";\nimport \"../index.css\";\nimport { ButtonToolbar, MenuItem, DropdownButton } from 'react-bootstrap';\nimport { Button } from \"react-bootstrap\";\n\nclass Buttons extends React.Component {\n\n    handleSelect = (evt) => {\n        this.props.gridSize(evt);\n    }\n\n\n    render() {\n        return (\n        <div className=\"center\">\n            <ButtonToolbar>\n              <Button bsStyle=\"primary\" onClick={this.props.startButton}>\n                Start\n              </Button>\n              <Button bsStyle=\"danger\" onClick={this.props.stopButton}>\n                Stop\n              </Button>\n              <Button bsStyle=\"success\" onClick={this.props.clear}>\n                Clear\n              </Button>\n              <Button bsStyle=\"warning\" onClick={this.props.slow}>\n                Slow\n              </Button>\n              <Button bsStyle=\"danger\" onClick={this.props.fast}>\n                Fast\n              </Button>\n              <Button bsStyle=\"info\" onClick={this.props.seed}>\n                Seed\n              </Button>\n              <DropdownButton\n                title=\"Grid Size\"\n                id=\"size-menu\"\n                onSelect={this.handleSelect}\n                >\n                <MenuItem eventKey=\"1\">30x20</MenuItem>\n                <MenuItem eventKey=\"2\">60x40</MenuItem>\n                <MenuItem eventKey=\"3\">80x60</MenuItem>\n               </DropdownButton>\n            </ButtonToolbar>\n        </div>    \n        )\n    }\n\n}\n\nexport default Buttons","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Grid from \"./components/Grid.js\";\nimport Buttons from \"./components/Buttons.js\";\nimport \"./index.css\";\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    this.speed = 100;\n    this.rows = 30;\n    this.cols = 50;\n    this.state = {\n      generation: 0,\n      gridFull: Array(this.rows)\n        .fill()\n        .map(() => Array(this.cols).fill(false))\n    };\n  }\n\n  selectBox = (row, col) => {\n    let gridCopy = arrayClone(this.state.gridFull);\n    gridCopy[row][col] = !gridCopy[row][col];\n    this.setState({\n      gridFull: gridCopy\n    });\n  };\n\n  seed = () => {\n    let gridCopy = arrayClone(this.state.gridFull);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        if (Math.floor(Math.random() * 4) === 1) {\n          gridCopy[1][j] = true;\n        }\n      }\n    }\n    this.setState({ gridFull: gridCopy });\n  };\n\n  //every 100 milliseconds we call play.\n  startButton = () => {\n    clearInterval(this.intervalId);\n    this.intervalId = setInterval(this.play, this.speed);\n  };\n\n  stopButton = () => {\n    clearInterval(this.intervalId);\n  };\n\n  slow = () => {\n    this.speed = 1000;\n    this.startButton();\n  };\n//start speed set to fast at 100ms\n  fast = () => {\n    this.speed = 100;\n    this.startButton();\n  };\n\n  clear = () => {\n    let grid = Array(this.rows)\n      .fill()\n      .map(() => Array(this.cols).fill(false));\n    this.setState({\n      gridFull: grid,\n      generation: 0\n    });\n  };\n\n  gridSize = size => {\n    switch (size) {\n      case \"1\":\n        this.cols = 30;\n        this.rows = 20;\n        break;\n      case \"2\":\n        this.cols = 60;\n        this.rows = 40;\n        break;\n      default:\n        this.cols = 80;\n        this.rows = 60;\n    }\n    this.clear();\n  };\n\n  play = () => {\n    let g = this.state.gridFull;\n    let g2 = arrayClone(this.state.gridFull);\n\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        let count = 0;\n        if (i > 0) if (g[i - 1][j]) count++;\n        if (i > 0 && j > 0) if (g[i - 1][j - 1]) count++;\n        if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) count++;\n        if (j < this.cols - 1) if (g[i][j + 1]) count++;\n        if (j > 0) if (g[i][j - 1]) count++;\n        if (i < this.rows - 1) if (g[i + 1][j]) count++;\n        if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) count++;\n        if (i < this.rows - 1 && this.cols - 1) if (g[i + 1][j + 1]) count++;\n        if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false; //cells die\n        if (!g[i][j] && count === 3) g2[i][j] = true; //cell lives\n      }\n    }\n    this.setState({\n      gridFull: g2,\n      generation: this.state.generation + 1\n    });\n  };\n// once page loads.  seed goes on to create pattern\n  componentDidMount() {\n    this.seed();\n    this.startButton();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1> Conway's Game of Life and Death </h1>\n        <Buttons\n          startButton={this.startButton}\n          stopButton={this.stopButton}\n          slow={this.slow}\n          fast={this.fast} \n          clear={this.clear}\n          seed={this.seed}\n          gridSize={this.gridSize}\n        />\n\n        <Grid\n          gridFull={this.state.gridFull}\n          rows={this.rows}\n          cols={this.cols}\n          selectBox={this.selectBox}\n        />\n        <h2>Generations Created: {this.state.generation}</h2>\n      </div>\n    );\n  }\n}\n\n// stringify will make a clone of the arrays inside the arrays\nfunction arrayClone(arr) {\n  return JSON.parse(JSON.stringify(arr));\n}\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n\n\n"],"sourceRoot":""}